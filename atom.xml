<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Lance.zyb Blog]]></title>
  <link href="http://lanceyb.github.io/atom.xml" rel="self"/>
  <link href="http://lanceyb.github.io/"/>
  <updated>2013-09-13T15:56:52+08:00</updated>
  <id>http://lanceyb.github.io/</id>
  <author>
    <name><![CDATA[Lance]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[《拖拉一点也无妨》]]></title>
    <link href="http://lanceyb.github.io/blog/2013/09/06/%3C%3Ctuo-la-%5B%3F%5D-dian-ye-wu-fang-%3E%3E/"/>
    <updated>2013-09-06T11:22:00+08:00</updated>
    <id>http://lanceyb.github.io/blog/2013/09/06/<<tuo-la-[?]-dian-ye-wu-fang->></id>
    <content type="html"><![CDATA[<blockquote><ol>
<li>结构化拖延</li>
<li>完美主义</li>
<li>心情不好</li>
<li>做事情时开小差</li>
</ol>
</blockquote>

<h3>结构化拖延</h3>

<p>eg：</p>

<ol>
<li>看《http 权威指南》</li>
<li>《拖拉一点也无妨》</li>
<li>…</li>
</ol>


<p>之后认为自己要写一篇关于<em>Railties</em> Blog</p>

<ol>
<li>写关于<em>Railties</em> Blog</li>
<li>看《http 权威指南》</li>
<li>《拖拉一点也无妨》</li>
<li>…</li>
</ol>


<h3>完美主义</h3>

<p>eg：做个web聊天系统。</p>

<ol>
<li>了解下web socket</li>
<li>学习nodejs</li>
<li>研究下html5的web socket</li>
<li>看下websocket-rails这个gem</li>
<li>研究下smpp</li>
<li>比较下nodejs、html5的web socket和smpp</li>
<li>通过6的比较，选择一个合适的，做个聊天系统</li>
</ol>


<p>结果是web聊天系统没做成，倒是做了其他的事情，如上面1-6的某些</p>

<h3>心情不好</h3>

<p>听音乐</p>

<h3>做事情开小差</h3>

<p>前天临睡前列待办事项清单，把可能引起开小差的事情也列进去，如作者清单：</p>

<ol>
<li>关掉闹钟</li>
<li>别按“小睡”按钮</li>
<li>起床</li>
<li>去浴室</li>
<li>别回来躺下</li>
<li>下楼</li>
<li>煮咖啡</li>
<li>倒第二杯咖啡</li>
<li>在桌子旁坐下，不要窝在沙发里</li>
<li>打开电脑</li>
<li>不要看邮件</li>
<li>不要上网乱逛</li>
<li>打开world文档</li>
<li>找到“达米特书评”那个文件夹，打开</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TSort]]></title>
    <link href="http://lanceyb.github.io/blog/2013/08/15/tsort/"/>
    <updated>2013-08-15T16:25:00+08:00</updated>
    <id>http://lanceyb.github.io/blog/2013/08/15/tsort</id>
    <content type="html"><![CDATA[<blockquote><p>拓扑排序</p></blockquote>

<h3>什么是<a href="http://baike.baidu.com/view/288212.htm">拓扑排序</a></h3>

<p>对一个有向无环图(Directed Acyclic Graph简称DAG)G进行拓扑排序，是将G中所有顶点排成一个线性序列，使得图中任意一对顶点u和v(一条有向边可以表示为(u, v))，若 ∈E(G)，则u在线性序列中出现在v之前。</p>

<h5>eg:</h5>

<p><img src="http://lanceyb.github.io/images/toplogical-sort.gif"></p>

<br />


<p>如上图所示，图（a），排序后的结果是：6, 1, 4, 3, 2, 5<br/>
排序的结果不是唯一的，图（a）排序后的结果还可以为1, 6, 3, 2, 4, 5</p>

<br />


<p>常用的算法是“入度为零”的算法，上图的图（a）到图（f）的过程就是使用入度为零的一个过程</p>

<blockquote><ol>
<li>从有向图中选取一个没有前驱的顶点，并输出之 (入度为零，如图a的v1，v6)；</li>
<li>从有向图中删去此顶点以及所有以它为尾的弧；（如图a，输出v1或v6后，要相应的删除以它为顶点的边{(v1, v2), (v1, v3), (v1, v4)}或{(v6, v4), (v6, v5)}）</li>
<li>重复上述两步，直至图空，或者图不空但找不到无前驱的顶点为止。</li>
</ol>
</blockquote>

<h3><a href="http://www.ruby-doc.org/stdlib-2.0/libdoc/tsort/rdoc/TSort.html">TSort</a>的使用</h3>

<p>借用api的例子</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="nb">require</span> <span class="s1">&#39;tsort&#39;</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Hash</span>
</span><span class='line'>    <span class="kp">include</span> <span class="no">TSort</span>
</span><span class='line'>    <span class="k">alias</span> <span class="n">tsort_each_node</span> <span class="n">each_key</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">tsort_each_child</span><span class="p">(</span><span class="n">node</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="n">fetch</span><span class="p">(</span><span class="n">node</span><span class="p">)</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">####将上图（a）以hash的形式表示</span>
</span><span class='line'>  <span class="p">{</span> <span class="mi">1</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="o">]</span><span class="p">,</span> <span class="mi">2</span> <span class="o">=&gt;</span> <span class="o">[]</span><span class="p">,</span> <span class="mi">3</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span><span class="p">,</span> <span class="mi">4</span> <span class="o">=&gt;[</span><span class="mi">5</span><span class="o">]</span><span class="p">,</span> <span class="mi">5</span> <span class="o">=&gt;</span> <span class="o">[]</span><span class="p">,</span> <span class="mi">6</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span> <span class="p">}</span><span class="o">.</span><span class="n">tsort</span> <span class="c1">#=&gt; [2, 5, 3, 4, 1, 6]； 与入度为零的结果相反</span>
</span></code></pre></td></tr></table></div></figure>


<p>tsort_each_node和tsort_each_child是必须rewrite的两个方法<br/>
TSort根据tsort_each_node得到每个节点，根据tsort_each_child得到节点的子节点<br/>
如上图a的，通过tsort_each_node分别得到 v1, v2, v3, v4, v5, v6；通过tsort_each_child v1得到 v2, v3, v4</p>

<h3><a href="https://github.com/rails/rails/blob/master/railties/lib/rails/initializable.rb#L39">Rails里的使用示例</a></h3>

<figure class='code'><figcaption><span>rails/railties/lib/rails/initializable.rb</span><a href='https://github.com/rails/rails/blob/master/railties/lib/rails/initializable.rb#L39'>link</a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Rails</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Initializable</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">Collection</span> <span class="o">&lt;</span> <span class="nb">Array</span>
</span><span class='line'>  
</span><span class='line'>      <span class="kp">include</span> <span class="no">TSort</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">alias</span> <span class="ss">:tsort_each_node</span> <span class="ss">:each</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">def</span> <span class="nf">tsort_each_child</span><span class="p">(</span><span class="n">initializer</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>        <span class="nb">select</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">i</span><span class="o">.</span><span class="n">before</span> <span class="o">==</span> <span class="n">initializer</span><span class="o">.</span><span class="n">name</span> <span class="o">||</span> <span class="n">i</span><span class="o">.</span><span class="n">name</span> <span class="o">==</span> <span class="n">initializer</span><span class="o">.</span><span class="n">after</span> <span class="p">}</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">def</span> <span class="nf">+</span><span class="p">(</span><span class="n">other</span><span class="p">)</span>
</span><span class='line'>        <span class="no">Collection</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">to_a</span> <span class="o">+</span> <span class="n">other</span><span class="o">.</span><span class="n">to_a</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="nb">require</span> <span class="s1">&#39;rails&#39;</span>
</span><span class='line'> <span class="c1">### 定义一个简单的Initializer</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Initializer</span>
</span><span class='line'>    <span class="kp">attr_reader</span> <span class="ss">:name</span>
</span><span class='line'>    <span class="c1">### options = { after: other_initializer_name, before: other_initializer_name }</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">initialize</span> <span class="nb">name</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>      <span class="vi">@name</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>      <span class="vi">@options</span> <span class="o">=</span> <span class="n">options</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  
</span><span class='line'>    <span class="k">def</span> <span class="nf">before</span>
</span><span class='line'>      <span class="vi">@options</span><span class="o">[</span><span class="ss">:before</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  
</span><span class='line'>    <span class="k">def</span> <span class="nf">after</span>
</span><span class='line'>      <span class="vi">@options</span><span class="o">[</span><span class="ss">:after</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">collection</span> <span class="o">=</span> <span class="ss">Rails</span><span class="p">:</span><span class="ss">:Initializable</span><span class="o">::</span><span class="no">Collection</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">[</span>
</span><span class='line'>      <span class="no">Initializer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;v1&quot;</span><span class="p">),</span>
</span><span class='line'>      <span class="no">Initializer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;v2&quot;</span><span class="p">,</span> <span class="p">{</span> <span class="ss">after</span><span class="p">:</span> <span class="s2">&quot;v1&quot;</span> <span class="p">}),</span>
</span><span class='line'>      <span class="no">Initializer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;v3&quot;</span><span class="p">,</span> <span class="p">{</span> <span class="ss">after</span><span class="p">:</span> <span class="s2">&quot;v2&quot;</span> <span class="p">})</span>
</span><span class='line'>  <span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">p</span> <span class="n">collection</span> <span class="c1">#=&gt; [</span>
</span><span class='line'>    <span class="c1">#&lt;Initializer:0x007f85425e7788 @name=&quot;v1&quot;, @options={}&gt;,</span>
</span><span class='line'>    <span class="c1">#&lt;Initializer:0x007f85425e75d0 @name=&quot;v2&quot;, @options={:after=&gt;&quot;v1&quot;}&gt;,</span>
</span><span class='line'>    <span class="c1">#&lt;Initializer:0x007f85425e7490 @name=&quot;v3&quot;, @options={:after=&gt;&quot;v2&quot;}&gt;</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">collection</span> <span class="o">=</span> <span class="n">collection</span> <span class="o">+</span> <span class="o">[</span>
</span><span class='line'>    <span class="no">Initializer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;v1.5&quot;</span><span class="p">,</span> <span class="p">{</span><span class="ss">after</span><span class="p">:</span> <span class="s2">&quot;v1&quot;</span><span class="p">,</span> <span class="ss">before</span><span class="p">:</span> <span class="s2">&quot;v2&quot;</span> <span class="p">}),</span>
</span><span class='line'>    <span class="no">Initializer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;v2.5&quot;</span><span class="p">,</span> <span class="p">{</span><span class="ss">before</span><span class="p">:</span> <span class="s2">&quot;v3&quot;</span><span class="p">})</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'>  <span class="nb">p</span> <span class="n">collection</span> <span class="c1">#=&gt; [</span>
</span><span class='line'>    <span class="c1">#&lt;Initializer:0x007ffc09486770 @name=&quot;v1&quot;, @options={}&gt;,</span>
</span><span class='line'>    <span class="c1">#&lt;Initializer:0x007ffc09485ac8 @name=&quot;v1.5&quot;, @options={:after=&gt;&quot;v1&quot;, :before=&gt;&quot;v2&quot;}&gt;,</span>
</span><span class='line'>    <span class="c1">#&lt;Initializer:0x007ffc09486680 @name=&quot;v2&quot;, @options={:after=&gt;&quot;v1&quot;}&gt;,</span>
</span><span class='line'>    <span class="c1">#&lt;Initializer:0x007ffc094859d8 @name=&quot;v2.5&quot;, @options={:before=&gt;&quot;v3&quot;}&gt;,</span>
</span><span class='line'>    <span class="c1">#&lt;Initializer:0x007ffc094865b8 @name=&quot;v3&quot;, @options={:after=&gt;&quot;v2&quot;}&gt;</span>
</span><span class='line'>  <span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的例子中，如果 &ldquo;v1.5&#8221;没有{before: &#8220;v2&rdquo;}，得到的结果&#8221;v1.5&#8221;会在最后面，这是因为{after: &ldquo;v1&rdquo;}，可以在v1后面的任意位置</p>
]]></content>
  </entry>
  
</feed>
