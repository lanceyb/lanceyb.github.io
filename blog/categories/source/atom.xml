<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Source | Lance.zyb Blog]]></title>
  <link href="http://lanceyb.github.io/blog/categories/source/atom.xml" rel="self"/>
  <link href="http://lanceyb.github.io/"/>
  <updated>2013-12-23T16:44:57+08:00</updated>
  <id>http://lanceyb.github.io/</id>
  <author>
    <name><![CDATA[Lance]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Engine]]></title>
    <link href="http://lanceyb.github.io/blog/2013/09/16/engine/"/>
    <updated>2013-09-16T11:04:00+08:00</updated>
    <id>http://lanceyb.github.io/blog/2013/09/16/engine</id>
    <content type="html"><![CDATA[<h3>怎么使用Engine的</h3>

<blockquote><p><a href="http://guides.rubyonrails.org/engines.html">http://guides.rubyonrails.org/engines.html</a></p></blockquote>

<ol>
<li>rails plugin new engine_name &mdash;mountable</li>
<li>gem &lsquo;engine_name&rsquo;, path: &ldquo;engine_path&rdquo;</li>
<li>mount EngineName::Engine, at: &lsquo;engine_name&rsquo;</li>
</ol>


<h3>那么Engine做了什么</h3>

<blockquote><ol>
<li>isolate_namespace</li>
<li>app</li>
<li>routes</li>
<li>initializers</li>
</ol>
</blockquote>

<h4>isolate_namespace</h4>

<p>用命名空间来隔离不同的engine</p>

<ol>
<li>设置railtie_name为 engine_name</li>
<li>设置routes的default_scope为 engine_name</li>
<li>其他</li>
</ol>


<h4>app</h4>

<p>An instance of ActionDispatch::MiddlewareStack used to store middlewares.</p>

<h4>routes</h4>

<p>An instance of ActionDispatch::Routing::RouteSet used to store routes.</p>

<h4>initializers</h4>

<p>有如下这些initializers：</p>

<ol>
<li><p>set_load_path before: :bootstrap_hook</p>

<pre><code> #将configred load paths 添加到 ruby load paths
 initializer :set_load_path, before: :bootstrap_hook do
   _all_load_paths.reverse_each do |path|
     $LOAD_PATH.unshift(path) if File.directory?(path)
   end
   $LOAD_PATH.uniq!
 end
</code></pre></li>
<li><p>set_autoload_paths :bootstrap_hook</p>

<pre><code> #暂时不能理解，简单的认为是那些自动加载的文件
 #包括["app"，"app/controllers", "app/helpers", "app/models",
 #    "app/mailers", "app/controllers/concerns", "app/models/concerns"]
 initializer :set_autoload_paths, before: :bootstrap_hook do
   ActiveSupport::Dependencies.autoload_paths.unshift(*_all_autoload_paths)
   ActiveSupport::Dependencies.autoload_once_paths.unshift(*_all_autoload_once_paths)

   # Freeze so future modifications will fail rather than do nothing mysteriously
   config.autoload_paths.freeze
   config.eager_load_paths.freeze
   config.autoload_once_paths.freeze
 end
</code></pre></li>
<li><p>add_routing_paths</p>

<pre><code> #加载路由文件
 initializer :add_routing_paths do |app|
   paths = self.paths["config/routes.rb"].existent

   if routes? || paths.any?
     app.routes_reloader.paths.unshift(*paths)
     app.routes_reloader.route_sets &lt;&lt; routes
   end
 end
</code></pre></li>
<li><p>add_locales</p>

<pre><code> #I18n文件
 initializer :add_locales do
   config.i18n.railties_load_path.concat(paths["config/locales"].existent)
 end
</code></pre></li>
<li><p>add_view_paths</p>

<pre><code> #views文件为lazily load files
 #用ActiveSupport.on_load(name, options, block)，定义一个名为name的lazily load hook
 #之后可以ActiveSupport.run_load_hooks(name, base)来加载（让base来调用block）
 initializer :add_view_paths do
   views = paths["app/views"].existent
   unless views.empty?
     ActiveSupport.on_load(:action_controller){ prepend_view_path(views) if respond_to?(:prepend_view_path) }
     ActiveSupport.on_load(:action_mailer){ prepend_view_path(views) }
   end
 end
</code></pre></li>
<li><p>load_environment_config before: :load_environment_hook, group: :all</p>

<pre><code> #加载environments文件
 initializer :load_environment_config, before: :load_environment_hook, group: :all do
   paths["config/environments"].existent.each do |environment|
     require environment
   end
 end
</code></pre></li>
<li><p>append_assets_path, group: :all</p>

<pre><code> #加载assets文件
 initializer :append_assets_path, group: :all do |app|
   app.config.assets.paths.unshift(*paths["vendor/assets"].existent_directories)
   app.config.assets.paths.unshift(*paths["lib/assets"].existent_directories)
   app.config.assets.paths.unshift(*paths["app/assets"].existent_directories)
 end
</code></pre></li>
<li><p>prepend_helpers_path</p>

<pre><code> #加载helpers文件
 initializer :prepend_helpers_path do |app|
   if !isolated? || (app == self)
     app.config.helpers_paths.unshift(*paths["app/helpers"].existent)
   end
 end
</code></pre></li>
<li><p>load_config_initializers</p>

<pre><code> #加载config/initializers文件
 initializer :load_config_initializers do
   config.paths["config/initializers"].existent.sort.each do |initializer|
     load(initializer)
   end
 end
</code></pre></li>
<li><p>engines_blank_point</p>

<pre><code>#空白的initializer
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[railtie]]></title>
    <link href="http://lanceyb.github.io/blog/2013/09/08/railtie/"/>
    <updated>2013-09-08T15:56:00+08:00</updated>
    <id>http://lanceyb.github.io/blog/2013/09/08/railtie</id>
    <content type="html"><![CDATA[<blockquote><p>SampleApp::Application &lt; Rails::Application &lt; Rails::Engine &lt; Rails::Railtie</p></blockquote>

<p><em>这里需要注意的地方有下面二个</em></p>

<h3>一、include <em><a href="http://lanceyb.github.io/blog/2013/08/27/initiaizable/">Initializable</a></em></h3>

<h3>二、method_missing</h3>

<p>源代码:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;class &amp;lt;&amp;lt; self</span>
</span><span class='line'><span class="sr">  …</span>
</span><span class='line'><span class="sr">  def instance&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="vi">@instance</span> <span class="o">||=</span> <span class="kp">new</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'>  <span class="kp">protected</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;# If the class method does not have a method, then send the method call</span>
</span><span class='line'><span class="sr"># to the Railtie instance.</span>
</span><span class='line'><span class="sr">def method_missing(name, *args, &amp;amp;block)</span>
</span><span class='line'><span class="sr">  if instance.respond_to?(name)</span>
</span><span class='line'><span class="sr">    instance.public_send(name, *args, &amp;amp;block)</span>
</span><span class='line'><span class="sr">  else</span>
</span><span class='line'><span class="sr">    super</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
将 <em>instance methods</em> 委托给 <em>class</em> 使用</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Initiaizable]]></title>
    <link href="http://lanceyb.github.io/blog/2013/08/27/initiaizable/"/>
    <updated>2013-08-27T00:01:00+08:00</updated>
    <id>http://lanceyb.github.io/blog/2013/08/27/initiaizable</id>
    <content type="html"><![CDATA[<blockquote><p>我的理解是：有序的对类进行初始化。参考<em><a href="http://lanceyb.github.io/blog/2013/08/15/tsort">TSort</a></em>。</p></blockquote>

<br />


<p>来看个例子
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;require &quot;rails&quot;</span>
</span><span class='line'><span class="sr">class Tour</span>
</span><span class='line'><span class="sr">    include Rails::Initializable</span>
</span><span class='line'>
</span><span class='line'><span class="sr">    attr_reader :cities</span>
</span><span class='line'>
</span><span class='line'><span class="sr">    def initialize</span>
</span><span class='line'><span class="sr">      @cities = []</span>
</span><span class='line'><span class="sr">    end</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">###一开始的计划是：先去USA，再去Britain，最后去France，</span>
</span><span class='line'><span class="sr">Tour.initializer(&quot;USA&quot;) do |do_the_same_th|</span>
</span><span class='line'><span class="sr">    @cities &amp;lt;&amp;lt; { country: &quot;USA&quot;, city: &quot;Silicon Valley&quot;, do: do_the_some_th }</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">Tour.initializer(&quot;France&quot;, before: &quot;Britain&quot;) do |do_the_same_th|</span>
</span><span class='line'><span class="sr">    @cities &amp;lt;&amp;lt; { country: &quot;France&quot;, city: &quot;Paris&quot;, do: do_the_same_th }</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">Tour.initializer(&quot;Britain&quot;, before: &quot;USA&quot;) do |do_the_same_th|</span>
</span><span class='line'><span class="sr">    @cities &amp;lt;&amp;lt; { country: &quot;Britain&quot;, city: &quot;London&quot;, do: do_the_same_th }</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">###后来我改变注意了，想去英国后，先回趟中国，再去法国</span>
</span><span class='line'><span class="sr">Tour.initializer(&quot;China&quot;, before: &quot;Britain&quot;, after: &quot;France&quot;) do |do_the_same_th|</span>
</span><span class='line'><span class="sr">    @cities &amp;lt;&amp;lt; { country: &quot;China&quot;, city: &quot;Beijin&quot;, do: do_the_same_th }</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">my_tour = Tour.new</span>
</span><span class='line'><span class="sr">my_tour.run_initializers(:default, &quot;take a photo&quot;)</span>
</span><span class='line'>
</span><span class='line'><span class="sr">my_tour.cities.each_with_index do |tour, index|</span>
</span><span class='line'><span class="sr">  p &quot;</span><span class="si">#{</span><span class="n">index</span><span class="si">}</span><span class="sr">: Went to </span><span class="si">#{</span><span class="n">tour</span><span class="o">[</span><span class="ss">:country</span><span class="o">]</span><span class="si">}</span><span class="sr">-</span><span class="si">#{</span><span class="n">tour</span><span class="o">[</span><span class="ss">:city</span><span class="o">]</span><span class="si">}</span><span class="sr"> and </span><span class="si">#{</span><span class="n">tour</span><span class="o">[</span><span class="ss">:do_the_same_th</span><span class="o">]</span><span class="si">}</span><span class="sr">&quot;</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
最后的输出结果如下：</p>

<pre><code>"0: Went to USA-Silicon Valley and "
"1: Went to Britain-London and "
"2: Went to China-Beijin and "
"3: Went to France-Paris and "
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TSort]]></title>
    <link href="http://lanceyb.github.io/blog/2013/08/15/tsort/"/>
    <updated>2013-08-15T16:25:00+08:00</updated>
    <id>http://lanceyb.github.io/blog/2013/08/15/tsort</id>
    <content type="html"><![CDATA[<blockquote><p>拓扑排序</p></blockquote>

<h3>什么是<a href="http://baike.baidu.com/view/288212.htm">拓扑排序</a></h3>

<p>对一个有向无环图(Directed Acyclic Graph简称DAG)G进行拓扑排序，是将G中所有顶点排成一个线性序列，使得图中任意一对顶点u和v(一条有向边可以表示为(u, v))，若 ∈E(G)，则u在线性序列中出现在v之前。</p>

<h5>eg:</h5>

<p><img src="/images/toplogical-sort.gif"></p>

<br />


<p>如上图所示，图（a），排序后的结果是：6, 1, 4, 3, 2, 5<br/>
排序的结果不是唯一的，图（a）排序后的结果还可以为1, 6, 3, 2, 4, 5</p>

<br />


<p>常用的算法是“入度为零”的算法，上图的图（a）到图（f）的过程就是使用入度为零的一个过程</p>

<blockquote><ol>
<li>从有向图中选取一个没有前驱的顶点，并输出之 (入度为零，如图a的v1，v6)；</li>
<li>从有向图中删去此顶点以及所有以它为尾的弧；（如图a，输出v1或v6后，要相应的删除以它为顶点的边{(v1, v2), (v1, v3), (v1, v4)}或{(v6, v4), (v6, v5)}）</li>
<li>重复上述两步，直至图空，或者图不空但找不到无前驱的顶点为止。</li>
</ol>
</blockquote>

<h3><a href="http://www.ruby-doc.org/stdlib-2.0/libdoc/tsort/rdoc/TSort.html">TSort</a>的使用</h3>

<p>借用api的例子
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;require &#39;tsort&#39;</span>
</span><span class='line'><span class="sr">class Hash</span>
</span><span class='line'><span class="sr">  include TSort</span>
</span><span class='line'><span class="sr">  alias tsort_each_node each_key</span>
</span><span class='line'><span class="sr">  def tsort_each_child(node, &amp;amp;block)</span>
</span><span class='line'><span class="sr">    fetch(node).each(&amp;amp;block)</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">####将上图（a）以hash的形式表示</span>
</span><span class='line'><span class="sr">{ 1 =&amp;gt; [2, 3, 4], 2 =&amp;gt; [], 3 =&amp;gt; [2, 5], 4 =&amp;gt;[5], 5 =&amp;gt; [], 6 =&amp;gt; [4, 5] }.tsort #=&amp;gt; [2, 5, 3, 4, 1, 6]； 与入度为零的结果相反</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>tsort_each_node和tsort_each_child是必须rewrite的两个方法<br/>
TSort根据tsort_each_node得到每个节点，根据tsort_each_child得到节点的子节点<br/>
如上图a的，通过tsort_each_node分别得到 v1, v2, v3, v4, v5, v6；通过tsort_each_child v1得到 v2, v3, v4</p>

<h3><a href="https://github.com/rails/rails/blob/master/railties/lib/rails/initializable.rb#L39">Rails里的使用示例</a></h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rails/railties/lib/rails/initializable.rb <a href="https://github.com/rails/rails/blob/master/railties/lib/rails/initializable.rb#L39">https://github.com/rails/rails/blob/master/railties/lib/rails/initializable.rb#L39</a> </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Rails</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Initializable</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;  class Collection &amp;lt; Array</span>
</span><span class='line'>
</span><span class='line'><span class="sr">    include TSort</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  alias :tsort_each_node :each</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  def tsort_each_child(initializer, &amp;amp;block)</span>
</span><span class='line'><span class="sr">    select { |i| i.before == initializer.name || i.name == initializer.after }.each(&amp;amp;block)</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  def +(other)</span>
</span><span class='line'><span class="sr">    Collection.new(to_a + other.to_a)</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="nb">require</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">rails</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'> <span class="c1">### 定义一个简单的Initializer&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">Initializer</span>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="c1">### options = { after: other_initializer_name, before: other_initializer_name }</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span> <span class="nb">name</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>    <span class="vi">@name</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>    <span class="vi">@options</span> <span class="o">=</span> <span class="n">options</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">before</span>
</span><span class='line'>    <span class="vi">@options</span><span class="o">[</span><span class="ss">:before</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">after</span>
</span><span class='line'>    <span class="vi">@options</span><span class="o">[</span><span class="ss">:after</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">collection</span> <span class="o">=</span> <span class="ss">Rails</span><span class="p">:</span><span class="ss">:Initializable</span><span class="o">::</span><span class="no">Collection</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">[</span>
</span><span class='line'>    <span class="no">Initializer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;v1&quot;</span><span class="p">),</span>
</span><span class='line'>    <span class="no">Initializer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;v2&quot;</span><span class="p">,</span> <span class="p">{</span> <span class="ss">after</span><span class="p">:</span> <span class="s2">&quot;v1&quot;</span> <span class="p">}),</span>
</span><span class='line'>    <span class="no">Initializer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;v3&quot;</span><span class="p">,</span> <span class="p">{</span> <span class="ss">after</span><span class="p">:</span> <span class="s2">&quot;v2&quot;</span> <span class="p">})</span>
</span><span class='line'><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="n">collection</span> <span class="c1">#=&amp;gt; [</span>
</span><span class='line'>  <span class="c1">#&amp;lt;Initializer:0x007f85425e7788 @name=&quot;v1&quot;, @options={}&amp;gt;,</span>
</span><span class='line'>  <span class="c1">#&amp;lt;Initializer:0x007f85425e75d0 @name=&quot;v2&quot;, @options={:after=&amp;gt;&quot;v1&quot;}&amp;gt;,</span>
</span><span class='line'>  <span class="c1">#&amp;lt;Initializer:0x007f85425e7490 @name=&quot;v3&quot;, @options={:after=&amp;gt;&quot;v2&quot;}&amp;gt;</span>
</span><span class='line'><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">collection</span> <span class="o">=</span> <span class="n">collection</span> <span class="o">+</span> <span class="o">[</span>
</span><span class='line'>  <span class="no">Initializer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;v1.5&quot;</span><span class="p">,</span> <span class="p">{</span><span class="ss">after</span><span class="p">:</span> <span class="s2">&quot;v1&quot;</span><span class="p">,</span> <span class="ss">before</span><span class="p">:</span> <span class="s2">&quot;v2&quot;</span> <span class="p">}),</span>
</span><span class='line'>  <span class="no">Initializer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;v2.5&quot;</span><span class="p">,</span> <span class="p">{</span><span class="ss">before</span><span class="p">:</span> <span class="s2">&quot;v3&quot;</span><span class="p">})</span>
</span><span class='line'><span class="o">]</span>
</span><span class='line'><span class="nb">p</span> <span class="n">collection</span> <span class="c1">#=&amp;gt; [</span>
</span><span class='line'>  <span class="c1">#&amp;lt;Initializer:0x007ffc09486770 @name=&quot;v1&quot;, @options={}&amp;gt;,</span>
</span><span class='line'>  <span class="c1">#&amp;lt;Initializer:0x007ffc09485ac8 @name=&quot;v1.5&quot;, @options={:after=&amp;gt;&quot;v1&quot;, :before=&amp;gt;&quot;v2&quot;}&amp;gt;,</span>
</span><span class='line'>  <span class="c1">#&amp;lt;Initializer:0x007ffc09486680 @name=&quot;v2&quot;, @options={:after=&amp;gt;&quot;v1&quot;}&amp;gt;,</span>
</span><span class='line'>  <span class="c1">#&amp;lt;Initializer:0x007ffc094859d8 @name=&quot;v2.5&quot;, @options={:before=&amp;gt;&quot;v3&quot;}&amp;gt;,</span>
</span><span class='line'>  <span class="c1">#&amp;lt;Initializer:0x007ffc094865b8 @name=&quot;v3&quot;, @options={:after=&amp;gt;&quot;v2&quot;}&amp;gt;</span>
</span><span class='line'><span class="o">]</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
上面的例子中，如果 &ldquo;v1.5"没有{before: "v2&rdquo;}，得到的结果"v1.5"会在最后面，这是因为{after: &ldquo;v1&rdquo;}，可以在v1后面的任意位置</p>
]]></content>
  </entry>
  
</feed>
